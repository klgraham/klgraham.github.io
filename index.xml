<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Continuous Deformation</title>
    <link>https://klgraham.github.io/</link>
    <description>Recent content on Continuous Deformation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Sep 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://klgraham.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tail Recursion In Scala And Clojure</title>
      <link>https://klgraham.github.io/post/tail-recursion-in-scala-and-clojure/</link>
      <pubDate>Fri, 09 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://klgraham.github.io/post/tail-recursion-in-scala-and-clojure/</guid>
      <description>I recently read a blog post about issues with writing purely functional code in Scala. The post talked a bit about a paper addressing tail-recursion in Scala. The code example (taken from the paper) was an implementation of zip lists, called zipIndex, that was not properly tail-recursive and would result in a stack overflow for relatively small inputs. A later post from the author will look at ways of addressing the problem and I’m looking forward to reading about it.</description>
    </item>
    
    <item>
      <title>Building A Simple Neural Network in Swift</title>
      <link>https://klgraham.github.io/post/building-a-simple-neural-network/</link>
      <pubDate>Tue, 05 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://klgraham.github.io/post/building-a-simple-neural-network/</guid>
      <description>So… you want to learn about neural networks? Well, you’ve come to the right place.
This post won’t focus on the theory behind how neural nets work. There are already several excellent websites for that, like Michael Nielsen’s Neural Networks and Deep Learning. This focuses on building a neural net in code. So, if you want to skip straight to the code, the repo is on Github.
What is a Neural Network?</description>
    </item>
    
    <item>
      <title>Probability Monad in Swift</title>
      <link>https://klgraham.github.io/post/swift-probability-monad/</link>
      <pubDate>Fri, 25 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://klgraham.github.io/post/swift-probability-monad/</guid>
      <description>I read about the probability monad in The Frequentist Approach to Probability a couple of years ago and thought it was pretty neat. I decided to make one in Swift, as an exercise in learning the language, after having done the same in Clojure and Java 8.
If you don’t know what a monad is, don’t worry, it’s not important for this post. Just know that it lets you do neat stuff with probability distributions, programmatically speaking.</description>
    </item>
    
  </channel>
</rss>